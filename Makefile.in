include(m4/version.m4)dnl
dnl
.POSIX: 

EXEEXT = # Extension for executables
OBJEXT = .o
PASEXT = .pas
UNITEXT = .ppu

MOEXT = .mo
POEXT = .po
POTEXT = .pot
RSTEXT = .rst
XMLEXT = .xml

.SUFFIXES: $(MOEXT) $(POEXT)

PC = fpc
PFLAGS = -S2 -Sh -Fu./po -Fu./libr3r -Fu./libr3r/* -FE. -FU$(R3R_UI) \
				 -Xs- -gh -gl -CX- -XX- # Oh-so-important debugging stuff for the \
				 													buggy alpha stage
# Defines, for enabling different features/dialect syntax
DEFS = "-dSETTINGS_INI"

TAR = tar
TARFLAGS = czf

CD = cd
CP = cp -fr
ECHO = echo
FPDOC = fpdoc
INSTALL = install -m 755
M4 = m4
MKDIR = mkdir -p
MSGFMT = msgfmt
MSGMERGE = msgmerge
MV = mv
RM = rm -fr
RSTCONV = rstconv
TOUCH = touch

ISCC=iscc
ISCCFLAGS=

AUTOPACKAGE=makeinstaller

R3R_UI = tui
OS = win32

VERSION = Get_Version

DESTDIR = /usr/local
prefix = $(DESTDIR)
exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
docdir = $(prefix)/doc/r3r
localedir = $(prefix)/share/locale

$(POEXT)$(MOEXT):
	$(MSGMERGE) -U $< po/r3r$(POTEXT)
	$(MSGFMT) -o $@ $<

.IGNORE: install uninstall

# Default building rule
all: Makefile libr3r/ver.pas touch-r3r r3r$(EXEEXT) languages

languages: po/r3r$(POTEXT) po/en$(MOEXT) po/eo$(MOEXT)

libr3r/ver.pas: libr3r/ver.in.pas
	$(M4) $< > $@

po/r3r$(POTEXT): $(R3R_UI)/r3rrs$(RSTEXT)
	$(RSTCONV) -i $< -o $@
	$(TOUCH) po/*$(POEXT)

# Regenerate the Makefile if Makefile.in has been updated
Makefile: Makefile.in
	$(M4) $< > $@
	$(MAKE)

# So the program will relink, regardless
touch-r3r:
	$(TOUCH) $(R3R_UI)/r3r$(PASEXT)

r3r$(EXEEXT): $(R3R_UI)/r3r$(PASEXT)
	$(PC) $(PFLAGS) $(DEFS) $<

cross:
	$(MAKE) PFLAGS="$(PFLAGS) -T$(OS)"

win32:
	$(MAKE) cross OS=win32 DEFS="-dSETTINGS_REGISTRY"

# Installation rules
install: all
	-$(MKDIR) $(bindir)
	-$(MKDIR) $(localedir)/en/LC_MESSAGES
	-$(MKDIR) $(localedir)/eo/LC_MESSAGES
	$(INSTALL) r3r$(EXEEXT) $(bindir)
	$(INSTALL) po/en$(MOEXT) $(localedir)/en/LC_MESSAGES/r3r$(MOEXT)
	$(INSTALL) po/eo$(MOEXT) $(localedir)/eo/LC_MESSAGES/r3r$(MOEXT)

install-win32:
	$(MAKE) DESTDIR="C:\\\\Program\\ Files\\\\R3R" EXEEXT=.exe install

# Uninstallation rules
uninstall:
	$(RM) $(bindir)/r3r$(EXEEXT)
	$(RM) $(localedir)/en/LC_MESSAGES/r3r$(MOEXT)
	$(RM) $(localedir)/eo/LC_MESSAGES/r3r$(MOEXT)

uninstall-win32:
	$(MAKE) DESTDIR="C:\\\\Program\\ Files\\\\R3R"" EXEEXT=.exe uninstall

# Documentation rules
docs: libr3r/formats/feeditem.pas libr3r/libr3r$(PASEXT) \
	libr3r/rmessage$(PASEXT) libr3r/libr3r.pas$(XMLEXT)
	-$(MKDIR) docs
	$(CD) docs && $(FPDOC) --input=../libr3r/libr3r$(PASEXT) \
		--input=../libr3r/formats/feeditem$(PASEXT) \
		--input=../libr3r/rmessage$(PASEXT) --descr=../libr3r/libr3r.pas$(XMLEXT) \
		--package=LibR3R

install-docs:
	-$(MKDIR) $(docdir)
	$(CD) docs && $(INSTALL) * $(docdir)

install-docs-win32:
	$(MAKE) DESTDIR="C:\\\\Program\\ Files\\\\R3R" install-docs

# Distribution rules
dist: distclean
	-$(MKDIR) ../r3r-src
	$(CP) * ../r3r-src
	$(MV) ../r3r-src r3r-src-$(VERSION)
	$(TAR) $(TARFLAGS) r3r-$(VERSION).tar.gz r3r-src-$(VERSION) \
		--exclude=.* --exclude=CVS
	$(RM) r3r-src-$(VERSION)
	$(MV) r3r-$(VERSION).tar.gz ..

dist-win32:
	$(MAKE) cross OS=win32
	$(ISCC) $(ISCCFLAGS) scripts\\iss\\setup.iss
	$(MV) scripts/iss/Output/setup.exe ../r3r-$(VERSION).exe

scripts/iss/setup.iss: scripts/iss/setup.iss.in
	$(M4) $< > $@

dist-win32-cross:
	$(MAKE) ISCC="wine iscc" dist-win32

scripts/autopackage/default.apspec: scripts/autopackage/default.apspec.in
	$(M4) $< > $@

dist-linux: all r3r$(EXEEXT) scripts/autopackage/default.apspec
	$(CD) scripts && $(AUTOPACKAGE)
	$(MV) scripts/r3r-$(VERSION).x86.package ..

# Cleaning rules
mostlyclean:
	$(RM) r3r$(EXEEXT)

clean cleanall: mostlyclean
	$(RM) */*$(OBJEXT) */*$(UNITEXT)

distclean: clean
	$(RM)  */*$(RSTEXT) */*$(MOEXT) */*$(POTEXT)
	$(RM) docs
	$(RM) libr3r/ver.pas
	$(RM) scripts/autopackage/default.apspec scripts/iss/setup.iss
	-delp -e .

maintainer-clean: distclean
	$(RM) Makefile

clean-win32:
	$(MAKE) EXEEXT=.exe distclean

# Other compilers
gpc:
	-$(MAKE) PC=gpc PFLAGS="--automake -B po -B libr3r -o r3r" UNITEXT=.gpi
	@$(ECHO) "Unless you really know what you're doing, the build has failed." \
	"Hopefully, it will work in the future."

for-borland-compilers:
	-$(MAKE) \
	PFLAGS="-B -CC -E. -M -O$(R3R_UI) -Upo -Ulibr3r -V" DEFS=-DNO_GETTEXT \
				 OBJEXT=.obj UNITEXT=.dcu
	@$(ECHO) "Compiling with Delphi/Kylix is currently unsupported.  If that" \
	"concerns you, send patches."

delphi:
	$(MAKE) PC=dcc32 for-borland-compilers

kylix:
	$(MAKE) PC=dcc for-borland-compilers

virtual-pascal vp:
	@$(ECHO) "Compiling with Virtual Pascal is unsupported.  If that concerns" \
	"you, send patches."

# Cleans files left by alternative compilers
clean-alt:
	-$(MAKE) distclean clean-win32
	-$(MAKE) UNITEXT=.gpi distclean clean-win32
	-$(MAKE) OBJEXT=.obj UNITEXT=.dcu distclean clean-win32 maintainer-clean
