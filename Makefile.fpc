[package]
name=r3r
version=$(VERSION)

[requires]
nortl=y

[prerules]
USE_PAX ?= 1

ifeq ($(USE_PAX),1)
	PAX = pax
	PAXFLAGS = -w -x ustar
else
	PAX = tar
	PAXFLAGS = -cf -
endif

[rules]
include scripts/common.make
all:
	cd icons && $(MAKE)
	cd src && $(MAKE)
	$(MOVE) src/ui/$(R3R_UI)/r3r$(EXEEXT) r3r-$(R3R_UI)$(EXEEXT)
	$(COPY) r3r-$(R3R_UI)$(EXEEXT) r3r$(EXEEXT)

install:
	cd icons && $(MAKE) install
	cd src && $(MAKE) install
	$(INSTALLEXE) r3r$(EXEEXT) $(bindir)

docs:
	cd doc/api && $(MAKE)

dist-docs: docs
	$(PAX) $(PAXFLAGS) doc/api | gzip -cf > ../r3r-$(VERSION)-api.tar.gz


# Uninstallation rules
uninstall:
	cd doc && $(MAKE) uninstall
	cd icons && $(MAKE) uninstall
	cd src && $(MAKE) uninstall
	$(DEL) $(bindir)/r3r$(EXEEXT)

# Distribution rules
dist:
	$(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)
	$(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/bin
	$(COPY) r3r$(EXEEXT) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/bin
	$(COPY) src/utils/opml/r3r_opml$(EXEEXT) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/bin
	$(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/lib
	$(COPY) src/libr3r/$(SHAREDLIBPREFIX)libr3r_shared$(SHAREDLIBEXT) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/lib
	$(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/icons
	$(COPY) icons/r3r.png  ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/icons
	$(foreach l, $(subst .mo,,$(notdir $(wildcard src/libr3r/po/*.mo))), $(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/locale/LC_MESSAGES/$l; $(COPY) src/libr3r/po/$l.mo ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/locale/LC_MESSAGES/$(l)/libr3r.mo;)
	$(foreach l, $(subst .mo,,$(notdir $(wildcard src/ui/$(R3R_UI)/po/*.mo))), $(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/locale/LC_MESSAGES/$l; $(COPY) src/ui/$(R3R_UI)/po/$l.mo ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/locale/LC_MESSAGES/$l/r3r_$(R3R_UI).mo;)
	$(foreach l, $(subst .mo,,$(notdir $(wildcard src/utils/opml/po/*.mo))), $(MKDIR) ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/locale/LC_MESSAGES/$l; $(COPY) src/utils/opml/po/$l.mo ../r3r-$(VERSION)-$(PLATFORM)/$(prefix)/share/locale/LC_MESSAGES/$l/r3r_opml.mo;)
	$(PAX) $(PAXFLAGS) ../r3r-$(VERSION)-$(PLATFORM) | \
		gzip -f > ../r3r-$(VERSION)-$(PLATFORM).tar.gz
	$(DELTREE) ../r3r-$(VERSION)-$(PLATFORM)

dist-src: clean
	-$(MKDIR) ../r3r-$(VERSION)
	-$(COPY) -rf * ../r3r-$(VERSION)
	$(PAX) $(PAXFLAGS) ../r3r-$(VERSION) | gzip -cf > r3r-$(VERSION)-src.tar.gz 
	$(DELTREE) ../r3r-$(VERSION)
	$(MOVE) r3r-$(VERSION)-src.tar.gz ..

dist-autopackage:
	cd scripts/setup && $(MAKE) dist-autopackage

dist-deb:
	cd scripts/setup && $(MAKE) dist-deb

dist-rpm:
	cd scripts/setup && $(MAKE) dist-rpm

dist-slackware:
	cd scripts/setup && $(MAKE) dist-slackware

dist-inno_setup:
	cd scripts/setup && $(MAKE) dist-inno_setup

# Compilation rules
ifndef DEBUG
fpc: fpc-release
else
fpc: fpc-debug
endif

fpc-release:
	$(MAKE) USE_FPC=1 all

fpc-debug:
	$(MAKE) PCFLAGS_DEBUG="-Xs- -gh -gl -gv -CX- -XX-" fpc-release

gpc:
	-$(MAKE) USE_GPC=1
	@$(ECHO) "Unless you really know what you're doing, the build" \
		"has failed.  Hopefully, it will work in the future."

for-borland-compilers:
	-$(MAKE) \
	PCFLAGS_BASE="-B -CC -E. -M -O$(R3R_UI) -Upo -Ulibr3r -V" \
	OEXT=.obj PPUEXT=.dcu all
	@$(ECHO) "Compiling with Delphi/Kylix is currently unsupported.  If that" \
	"concerns you, send patches."

delphi:
	$(MAKE) PC=dcc32 for-borland-compilers

kylix:
	$(MAKE) PC=dcc for-borland-compilers

# Cleaning rules
clean:
	cd doc && $(MAKE) clean
	cd icons && $(MAKE) clean
	cd scripts/setup && $(MAKE) clean
	cd src && $(MAKE) clean
	$(DEL) description-pak
	$(DEL) r3r$(EXEEXT) r3r-$(R3R_UI)$(EXEEXT)
